package br.com.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import br.com.exception.DaoException;
import br.com.model.UsuarioComum;
import br.com.sql.SqlConnection;
import br.com.sql.SqlUtil;

public class DaoUsuarioComum implements IDaoUsuarioComum{
	
	private Connection conexao;
	private PreparedStatement statement;
	private ResultSet result;
	
	
	public DaoUsuarioComum() {
		this.conexao = SqlConnection.getInstance();
	}
	
	
	@Override
	public UsuarioComum cadastrar(UsuarioComum usuarioComum) throws DaoException {
		try {
			this.statement = conexao.prepareStatement(SqlUtil.UsuarioComumSQL.INSERT_ALL);
			this.statement.setString(1, usuarioComum.getNome());
			this.statement.setString(2, usuarioComum.getCpf());
			this.statement.setString(3, usuarioComum.getTelefone());
			this.statement.setString(4, usuarioComum.getEndereco());
			this.statement.execute();
			
		} catch (SQLException e) {			
			e.printStackTrace();
			throw new DaoException("ERRO AO CADASTRAR USUARIO - CONTATAR ADM");
		}
		return usuarioComum;
	}


	@Override
	public UsuarioComum getCpf(String cpf) throws DaoException {
		UsuarioComum usuarioComum = null;
		try {
			this.statement = this.conexao.prepareStatement(SqlUtil.UsuarioComumSQL.SELECT_CPF);
			this.statement.setString(1, cpf);
			this.result = this.statement.executeQuery();
			if (result.next()) {
				usuarioComum = new UsuarioComum();
				usuarioComum.setId(this.result.getInt(1));
				usuarioComum.setNome(this.result.getString(2));
				usuarioComum.setCpf(this.result.getString(3));
				
			} else {
				return aluno;
			}

		} catch (SQLException e) {
			e.printStackTrace();
			throw new DaoException("Usuário não existe");

		}

		return aluno;
		return null;
	}


	@Override
	public boolean isCpf(String cpf) throws DaoException {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public ArrayList<UsuarioComum> getAll() {
		// TODO Auto-generated method stub
		return null;
	}
}
